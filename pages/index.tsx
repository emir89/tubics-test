import { useState, useRef, useEffect } from 'react';
import Head from 'next/head';
import {
  Box, 
  Typography, 
  TextField, 
  Grid,
  Button
} from '@mui/material';
import {ISpaceship} from '../components/Spaceship';
import background from '../assets/ufo_background.gif';
import Image from 'next/image';

export default function SpaceshipsArmy() {
  const [generatedArmy, setGeneratedArmy] = useState<ISpaceship[]>([]);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<string>('');
  const [numberOfShipsTogenerate, setNumberOfShipsTogenerate] = useState(0);

  const generateArmy = async () => {
    try {
      setIsLoading(true);
      const response = await fetch(`/api/spaceships?numberOfShips=${numberOfShipsTogenerate}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });
      const data = await response.json();
      setIsLoading(false);
      console.log(data);
    } catch (error) {
      console.log(error);
      setError('Something went wrong. Please try again.');
    }
  }

  const handleNumberOfShipsChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const numberOfShips = Number(event.target.value);
    console.log(numberOfShips);
    setNumberOfShipsTogenerate(numberOfShips);
  }

  useEffect(() => {
    console.log('is loading', isLoading);
  }, [isLoading]);

  return (
    <Box sx={{position: 'relative'}}>
      <Image src={background} alt="Spaceship" fill quality={100} />
      <Head>
        <title>Spaceship Army Generator</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Grid 
          display="flex" 
          flexDirection="column" 
          alignItems="center" 
          height="100vh"
          >
          <Box marginTop={20} zIndex={99} justifyContent="center">
            <Typography variant='h1' fontSize='2rem'>Welcome to the spaceship army generator</Typography>
            <Box sx={{ width: '100%' }} display="flex" flexDirection="column" alignItems="flex-end">
              <form style={{width: '100%'}} onSubmit={(e) => { 
                e.preventDefault(); 
                generateArmy(); 
                }}>
                  <TextField 
                    sx={{marginTop: '2rem'}}
                    fullWidth
                    variant="standard"
                    type="number" 
                    aria-describedby="my-helper-text" 
                    placeholder='Enter the number of ships' 
                    onChange={handleNumberOfShipsChange} 
                  />
              </form>
              <Button  
                sx={{marginTop: "2rem", position: "relative", right: 0}} 
                variant="contained" 
                onClick={generateArmy}>
                  Generate
                </Button>
            </Box>
          </Box>
          <Box>
            {isLoading && <Typography variant='h1' fontSize='2rem'>Your army is being generated...</Typography>}
            {generatedArmy.length > 0 && 
              <Box>
                <Typography variant='h1' fontSize='2rem'>Generated army</Typography>
              </Box>
            }
          </Box>
        </Grid>
      </main>
    </Box>
  )
}
